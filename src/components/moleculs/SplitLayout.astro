---
import type { HTMLAttributes } from "astro/types";
import type { Wrapper as WrapperProps } from "@/components/Wrapper.astro";
import { wrapper } from "@/components/Wrapper.astro";

const splitLayout = {
    defaultClass: "split",
    variants: {
        banner: "split--banner",
    },
    direction: {
        topleft: "split--top-left",
        topRigth: "split--top-rigth",
        bottomLeft: "split--bottom-left",
        bottomRigth: "split--bottom-rigth",
    },
};

export interface SplitLayout extends Omit<WrapperProps , 'variant'> {
    variant?: keyof typeof splitLayout.variants;
    variantWrapper?: WrapperProps["variant"];
    directionContent?: keyof typeof splitLayout.direction;
}

export interface Props extends HTMLAttributes<"div">, SplitLayout {}

const {
    variant,
    classBlock,
    classVariant,
    align,
    colors,
    classUtilities,
    variantWrapper = 'large',
    directionContent = 'topleft',
    ...attrs
} = Astro.props;

const combinedClass = [
    wrapper.defaultClass,
    splitLayout.defaultClass,
    classBlock,
    variantWrapper && wrapper.variants[variantWrapper],
    align && wrapper.align[align],
    colors && wrapper.colors[colors],
    variant && splitLayout.variants[variant],
    classVariant,
    directionContent && splitLayout.direction[directionContent],
    classUtilities,
    
]
    .filter(Boolean)
    .join(" ");
---
<div
    class:list={[combinedClass]}
    {...attrs}
>
    <slot />
</div>
