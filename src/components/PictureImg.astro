---
import type { ImagenOriginal } from "../data/GetDataCursos";

interface Props extends ImagenOriginal {}

const { imagen, alt} = Astro.props;
---

<picture class="lazy-picture aspect-ratio-box animation-loader">
    {
        imagen.map(({ url, type }) => (
            <source data-srcset={`/img/${url}`} type={`image/${type}`} />
        ))
    }
    <img class="aspect-ratio-box border-radius-2" alt={alt} />
</picture>


<script>
    const lazyImages = document.querySelectorAll(".lazy-picture");

const observer = new IntersectionObserver(
    (entries, observer) => {
        entries.forEach((entry) => {
            if (entry.isIntersecting) {
                const picture = entry.target;
                const sources = picture.querySelectorAll("source");
                const img = picture.querySelector("img");

                sources.forEach((source) => {
                    source.srcset = source.dataset.srcset;
                    img.srcset = source.dataset.srcset;
                });

                img.addEventListener("load", () => {
                        setTimeout(() => {
                            img.parentElement.classList.remove(
                                "animation-loader",
                            );
                            img.parentElement.classList.add("loaderOk");
                        }, 500);
                    });
                
                
                observer.unobserve(picture);
            }
        });
    },
    { rootMargin: "0px 0px 0px 0px" },
);

lazyImages.forEach((lazyImage) => {
    observer.observe(lazyImage);
});
</script>