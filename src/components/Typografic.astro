---
import type { HTMLTag, Polymorphic } from 'astro/types';
import { cva, type VariantProps } from 'class-variance-authority';

const typogtafic = cva('', {
   variants: {
      color: {
         black: 'color-black-000',
         white: 'color-white-000',
         'black-text': 'color-black-200',
         'white-text': 'color-white-200',
         blue: 'color-blue-800'
      },
      size: {
         superTitle: 'fs-super-title-1',
         superTitleSub: 'fs-super-title-2',
         sectionTitle: 'title-section fs-superTitleSub',
         title1: 'fs-title-1',
         title2: 'fs-title-2',
         title3: 'fs-title-3',
         normal: 'fs-normal',
         small: 'fs-small-1',
      },
      family: {
         bebas: 'font-bebas-neue',
      },
      align: {
         center: 'text-center',
         end: 'text-end',
      },
      weigth: {
         '400': 'fw-400',
         '500': 'fw-500',
         '600': 'fw-600',
         '700': 'fw-700',
         '800': 'fw-800',
      },
   },
});

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag; classes?: string }> &
   VariantProps<typeof typogtafic>;

const {
   as: Tag,
   color,
   size,
   classes,
   align,
   weigth,
   family,
   ...attrs
} = Astro.props;
---

<Tag
   class={typogtafic({ color, size, align, weigth, family, class: classes })}
   {...attrs}>
   <slot />
</Tag>


