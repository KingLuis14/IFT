---
import Button from "./Button.astro";
import Wrapper from "./Wrapper.astro";

interface Props {
    ArrayItems: { item: string; url: string }[];
}

const { ArrayItems } = Astro.props;
---

<header class="navbar-container" id="header-main">
    <Wrapper classBlock="navbar">
        <a
            class="navbar__logo"
            href="/"
            aria-label="click para ir al pagina principal"
        >
            <img
                fetchpriority="high"
                loading="eager"
                src="/img/logo.png"
                alt="IFT logo"
            />
        </a>
        <ul class="menu" id="main-menu">
            {
                ArrayItems.map(({ item, url }) => {
                    return (
                        <li class="menu__item">
                            <a
                                class="menu__link color-white-000"
                                href={url}
                                target={
                                    url === "https://www.ift.pe/virtual/"
                                        ? "_blank"
                                        : "_self"
                                }
                                rel={
                                    url === "https://www.ift.pe/virtual/"
                                        ? "noopener noreferrer"
                                        : undefined
                                }
                            >
                                {item}
                            </a>
                        </li>
                    );
                })
            }
        </ul>
        <button class="Boton-Toogle" id="BtnToogle" title="Button-Show">
            <span class="raya-top"></span>
            <span class="raya-center"></span>
            <span class="raya-bottom"></span>
        </button>
    </Wrapper>
</header>

<style lang="scss">
    .navbar-container {
        --_bg-color-header: var(--bg-color-header, transparent);
        --_color-link: var(--color-link, #fff);
        --_color-icon: var(--color-icon, #fff);

        position: fixed;
        height: var(--header-heigth);
        top: 0;
        z-index: 1000;
        width: 100%;
        padding-block: 0.7rem;
        transition: background-color 0.5s;
        background-color: var(--_bg-color-header);

        &.active {
            --bg-color-header: #fff;
            --color-link: #000;
            --color-icon: #000;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
        }
    }

    .navbar {
        display: flex;
        flex-wrap: nowrap;
        justify-content: space-between;
        align-items: center;
        height: 100%;
        z-index: 100;

        &__logo {
            height: 100%;
            width: auto;
        }
    }

    .menu {
        background-color: var(--color-white-000);
        position: fixed;
        display: flex;
        flex-direction: column;
        gap: 0;
        top: var(--header-heigth);
        width: 100%;
        height: 100vh;
        will-change: right;
        right: -100%;
        transition: right 0.5s;

        &.active {
            will-change: auto;
            right: -35%;
        }

        &__link {
            color: black;

            @media (width > 840px) {
                color: var(--_color-link);
            }
        }

        @media (width > 840px) {
            background-color: transparent;
            position: static;
            width: auto;
            height: auto;
            display: flex;
            flex-direction: row;
            align-items: center;
            gap: 1.5rem;
        }
    }

    .menu__item {
        position: relative;
        overflow: hidden;
        padding: 1rem;

        @media (width > 840px) {
            padding: 0;
            &::after {
                content: "";
                position: absolute;
                left: 0;
                bottom: 0;
                width: 100%;
                height: 2px;

                transform: scale(0);
                transition: transform 0.5s;
                background-color: var(--color-Primary700);
            }

            &:hover::after {
                transform: scale(1);
            }
        }
    }

    .Boton-Toogle {
        border: none;
        width: 2.5rem;
        aspect-ratio: 1/1;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
        gap: 0.25rem;
        cursor: pointer;

        &.active .raya-top {
            transform: translate(3px, -2px) rotate(45deg);
        }
        &.active .raya-center {
            opacity: 0;
        }
        &.active .raya-bottom {
            transform: translate(3px, 2px) rotate(-45deg);
        }

        @media (width > 840px) {
            display: none;
        }
    }

    %raya {
        width: 60%;
        display: block;
        background-color: var(--_color-icon);
        height: 2.3px;
        border-radius: 9999px;
        transform-origin: left;
    }

    .raya-top {
        @extend %raya;
        transition: transform 0.5s;
    }
    .raya-center {
        @extend %raya;
        transition:
            transform 0.5s,
            opacity 0.5s;
        opacity: 1;
    }
    .raya-bottom {
        @extend %raya;
        transition: transform 0.5s;
    }
</style>

<script>
    document.addEventListener("astro:page-load", () => {
        const MenuHamburguesa = document.getElementById("BtnToogle");
        const MainMenu = document.getElementById("main-menu");

        MenuHamburguesa?.addEventListener("click", () => {
            MainMenu?.classList.toggle("active");
            MenuHamburguesa.classList.toggle("active");

            if(window.scrollY <= 0){
                $HeaderMain?.classList.toggle("active");
            }
        });

        const $HeaderMain = document.getElementById("header-main");
        let lastKnownScrollPosition = 0;
        let ticking = false;

        function handleScroll(scrollPos) {
            if (scrollPos > 0) {
                $HeaderMain?.classList.add("active");
            } else {
                if(!(MainMenu?.classList.contains('active'))){
                    $HeaderMain?.classList.remove("active");
                }
            }
        }

        
        document.addEventListener("scroll", () => {
            lastKnownScrollPosition = window.scrollY;

            if (!ticking) {
                window.requestAnimationFrame(() => {
                    handleScroll(lastKnownScrollPosition);
                    ticking = false;
                });

                ticking = true;
            }
        });
        handleScroll(window.scrollY);
    });

    
</script>
