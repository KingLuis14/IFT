---
import type { HTMLAttributes } from "astro/types";

export const wrapper = {
    defaultClass: "wrapper",
    variants: {
        large: "wrapper--lg",
        medium: "wrapper--sm",
        form: "wrapper--form",
    },
    align: {
        left: "text-start",
        center: "text-center",
        end: "text-end",
    },
    colors: {
        black: "color-black-000",
        white: "color-white-000",
        green: "color-green-500",
    },
};

export interface Wrapper {
    variant?: keyof typeof wrapper.variants;
    align?: keyof typeof wrapper.align;
    colors?: keyof typeof wrapper.colors;
    classBlock?: string;
    classVariant?: string;
    classUtilities?: string;
}

export interface Props extends HTMLAttributes<"div">, Wrapper {}

const {
    variant = "large",
    classBlock,
    classVariant,
    align,
    colors,
    classUtilities,
    ...attrs
} = Astro.props;

const combinedClass = [
    wrapper.defaultClass,
    classBlock,
    wrapper.variants[variant],
    align && wrapper.align[align],
    colors && wrapper.colors[colors],
    classVariant,
    classUtilities,
]
    .filter(Boolean)
    .join(" ");
---

<div
    class:list={[combinedClass]}
    {...attrs}
>
    <slot />
</div>
