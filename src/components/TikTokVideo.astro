---
import { Icon } from 'astro-icon/components';

interface Props {
   videoId: string;
   thumbnailUrl: string;
   title: string;
}

const { videoId, thumbnailUrl, title } = Astro.props;
---

<tiktok-video
   class="tiktok-video"
   videoid={videoId}
   thumbnailurl={thumbnailUrl}
   data-title={title}
   aria-label="Reproducir video"
   role="button"
   tabindex="0">
   <div class="video-button" id=`Id${videoId}` title={title}>
      <Icon name="Play" size={20} class="text-primary" />
   </div>
</tiktok-video>

<style lang="scss">
   tiktok-video {
       display: block;
       position: relative;
      border-radius: 16px;
      width: 320px;
    //   aspect-ratio: 320/570;
      height: 570px;
      background-color: black;
      margin-inline-end: auto;
      cursor: pointer;
      background-position: center;
      background-size: 100%;
      transition: background-size 0.3s ease;

      @media (width >= 768px) {
         margin-inline: auto;
      }

      &:hover {
         background-size: 105%;
      }

      .video-button {
         width: 3rem;
         display: grid;
         place-items: center;
         aspect-ratio: 1;
         background-color: white;
         border-radius: 9999px;
         position: absolute;
         bottom: 1.5rem;
         right: 1.5rem;
         transition: transform 0.3s ease;

         &:hover {
            transform: scale(1.1);
         }

         .icon {
         }
      }
   }
</style>

<script>
   class TiktokVideo extends HTMLElement {
      videoId?: string;

      connectedCallback() {
         const thumbnailUrl = this.getAttribute('thumbnailurl');
         this.videoId = this.getAttribute('videoid')!;

         this.style.backgroundImage = `url(${thumbnailUrl})`;

         this.addEventListener('click', this.activateVideo);
         this.addEventListener('keydown', this.handleKeyPress);
      }

      activateVideo() {
         this.style.backgroundImage = 'unset';

         this.querySelector(`#Id${this.videoId}`)?.remove();

         const iframeEl = this.createIframe();
         this.append(iframeEl);
         iframeEl.focus();

         this.unMutePlayerByDefault();
      }

      handleKeyPress(event: KeyboardEvent) {
         if (event.code === 'Enter' || event.code === 'Space') {
            this.activateVideo();
         }
      }

      createIframe() {
         const iframeEl = document.createElement('iframe');
         iframeEl.style.width = '100%';
         iframeEl.style.height = '100%';
         iframeEl.style.borderRadius = '16px';
         iframeEl.title = this.getAttribute('data-title')!;
         iframeEl.allow = 'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture; transparency';
         iframeEl.allowFullscreen = true;
         iframeEl.src = `https://www.tiktok.com/player/v1/${this.videoId}?autoplay=1`;

         return iframeEl;
      }

      unMutePlayerByDefault() {
         const messageHandler = (event: MessageEvent) => {
            if (event.origin === 'https://www.tiktok.com' && event.data.type === 'onPlayerReady') {
               this.querySelector('iframe')!.contentWindow!.postMessage(
                  { type: 'unMute', 'x-tiktok-player': true },
                  '*',
               );

               window.removeEventListener('message', messageHandler);
            }
         };

         window.addEventListener('message', messageHandler);
      }
   }

   customElements.define('tiktok-video', TiktokVideo);
</script>
